from typing import List
from collections import Counter


class MajorityChecker:

    def __init__(self, arr: List[int]):
        L = len(arr)
        self.arr = arr
        self.memo = {}

        # counter = Counter(arr)
        for i in range(L - 1):
            c = Counter(arr[i:])
            # c = deepcopy(counter)
            # if i > 0:
            #     c[arr[i]] -= 1
            self.memo[i, L-1] = c.most_common(1)[0]
            for j in range(L-1, i, -1):
                self.memo[i, j] = c.most_common(1)[0]
                c[arr[j]] -= 1

    def query(self, left: int, right: int, threshold: int) -> int:
        if left == right:
            return self.arr[left]
        val, freq = self.memo[left, right]
        if freq < threshold:
            return -1
        return val

    def query(self, left: int, right: int, threshold: int) -> int:
        if left == right:
            return self.arr[left]
        val, freq = self.memo[left, right]
        if freq < threshold:
            return -1
        return val


mc = MajorityChecker(arr=[1,1,2,2,1,1])
print(mc.query(0,5,4))
print(mc.query(0,3,3))
print(mc.query(2,3,2))


mc = MajorityChecker(arr=[2,2,1,2,1,2,2,1,1,2])
print(mc.query(2,5,4))
print(mc.query(0,5,6))
print(mc.query(0,1,2))
print(mc.query(2,3,2))
print(mc.query(6,6,1))
print(mc.query(0,3,3))
print(mc.query(4,9,6))
print(mc.query(4,8,4))
print(mc.query(5,9,5))
print(mc.query(0,1,2))

mc = MajorityChecker(arr=[3,2,3,1,2,2,2,2,2,3,3,3,3,2,1,3,3,3,1,3,3,2,1,1,1,2,2,2,3,1,1,2,2,2,3,2,1,2,3,1,2,2,3,2,3,1,3,2,3,2,2,1,1,2,2,2,1,1,2,2,3,3,3,3,2,1,1,3,2,2,3,2,2,2,3,2,1,1,3,3,3,2,1,3,3,3,3,2,2,3,2,1,1,2,1,3,1,3,3,1,2,2,3,1,1,3,1,1,2,1,3,1,3,2,3,1,1,2,3,1,2,1,1,3,1,3,2,2,3,2,3,2,3,3,1,2,2,3,3,3,1,2,3,3,3,2,2,3,2,1,1,1,3,2,1,2,3,1,1,3,1,1,1,2,3,1,2,1,2,1,3,1,1,1,3,1,2,2,1,1,3,1,2,3,1,2,3,1,1,2,3,2,3,1,1,1,2,2,2,3,1,1,2,3,1,2,1,3,3,2,2,2,3,1,1,1,1,1,1,3,1,3,1,1,1,3,2,3,2,3,1,1,1,2,1,1,3,2,3,3,3,2,2,3,2,2,3,3,3,1,3,3,2,1,2,2,1,2,2,2,3,2,3,2,3,2,2,1,2,3,2,3,3,3,2,3,3,1,3,3,2,3,2,1,1,3,2,2,2,2,2,1,1,1,3,2,3,2,3,1,2,2,3,3,2,1,3,1,2,2,3,3,3,1,1,2,1,1,3,1,1,3,1,2,2,2,1,2,3,2,1,2,1,3,1,1,2,3,2,1,3,3,1,1,3,1,2,1,3,3,2,3,1,2,3,2,3,2,3,3,1,2,2,3,3,2,2,3,3,2,2,1,1,2,2,3,2,1,1,3,1,2,3,1,2,2,2,2,1,1,3,3,3,3,3,1,3,3,3,3,2,2,3,2,2,2,1,3,1,2,1,3,2,2,1,3,1,3,3,1,3,2,1,3,1,2,2,2,3,3,1,1,3,1,2,1,3,2,2,3,2,3,2,3,2,2,1,3,2,3,2,3,2,3,3,3,2,1,3,3,1,1,2,1,3,3,2,1,3,3,2,2,3,3,2,2,2,1,1,1,1,2,2,3,3,3,2,1,2,2,3,1,2,3,2,3,1,1,2,2,1,1,2,3,3,1,1,2,3,3,2,1,3,1,2,1,3,3,1,2,1,1,2,1,2,1,3,3,2,2,1,2,3,2,3,2,1,2,2,3,1,2,1,2,3,2,1,3,1,3,2,1,2,1,2,3,1,2,1,3,1,3,3,3,3,3,2,3,3,1,1,2,1,1,1,3,2,2,1,1,1,3,1,1,1,2,2,3,3,1,2,3,2,2,1,2,1,3,2,2,3,3,2,1,3,1,1,1,1,2,2,3,2,1,3,2,1,1,2,2,1,3,1,3,3,3,2,1,1,1,1,3,2,3,3,2,2,1,3,1,2,2,3,2,2,2,2,3,1,2,1,1,2,3,1,1,3,1,3,1,2,3,3,2,1,3,2,2,2,3,3,3,3,1,2,3,3,1,3,2,2,1,3,3,1,3,3,2,2,3,2,3,2,2,3,3,1,2,2,3,3,2,3,2,2,2,3,1,3,3,3,2,1,1,1,1,3,1,1,3,2,3,3,3,3,2,2,2,2,3,2,2,3,1,3,2,3,3,3,3,2,3,2,2,3,2,3,2,3,2,3,3,3,2,3,1,3,3,2,1,1,1,3,3,2,1,3,2,3,1,3,3,3,3,1,1,3,2,3,1,2,1,1,1,1,1,2,3,2,3,2,2,2,2,2,2,2,2,2,2,3,2,3,1,2,1,1,1,2,3,2,3,2,3,3,2,2,1,3,1,1,3,2,1,1,2,1,2,3,3,2,3,3,3,1,3,3,3,1,3,3,1,1,1,1,3,3,3,1,2,1,3,1,3,3,2,2,3,3,3,1,2,2,1,2,1,3,3,3,3,2,3,3,2,3,3,1,1,1,1,1,1,3,3,1,1,3,2,1,1,1,1,3,3,1,1,2,1,2,3,3,2,1,2,1,3,1,2,3,2,2,3,1,3,1,3,2,1,1,3,2,1,1,2,3,3,3,2,3,2,1,3,1,3,2,3,1,3,2,1,3,3,1,3,1,3,1,2,2,1,2,1,1,1,1,2,1,1,2,3,3,1,1,2,2,3,1,3,3,1,3,1,2,3,1,2,2,1,2,1,1,1,2,3,1,2,3,2,1,1,3,3,1,1,3,2,1,3,2,2,3,2,2,3,2,2,1,3,3,3,2,3,3,3,1,3,3,3,2,1,1,3,1,2,1,2,2,3,3,3,1,2,1,2,2,3,2,3,3,2,3,2,1,2,3,2,2,3,3,3,1,2,1,1,3,1,3,3,2,2,2,1,3,2,3,3,1,1,3,3,3,1,1,2,3,1,3,1,1,3,2,3,3,2,2,3,2,1,3,3,1,2,1,2,2,3,3,3,3,1,3,2,1,2,2,1,3,1,1,2,1,1,2,1,2,1,1,2,3,2,1,3,3,2,1,2,3,1,1,2,3,1,3,3,3,1,3,3,3,1,2,3,1,2,3,3,2,3,1,2,2,2,2,1,3,3,1,3,3,2,1,3,3,2,3,3,1,3,3,3,3,2,1,3,2,1,2,3,1,3,1,1,3,1,1,2,2,1,1,1,2,1,2,1,2,2,1,2,3,1,3,3,2,1,3,1,3,1,2,2,3,3,1,3,1,2,2,2,3,2,3,2,3,2,2,3,3,1,1,2,3,3,1,3,2,3,2,1,2,3,2,2,3,2,2,2,2,1,2,2,3,3,2,3,2,1,2,2,2,2,3,3,3,1,3,2,1,1,3,3,1,2,1,1,2,1,1,3,1,2,3,3,2,3,1,2,2,1,1,3,1,3,3,2,1,3,2,3,2,2,1,3,3,2,2,3,2,2,1,1,1,3,3,3,2,1,2,2,2,3,3,3,1,1,3,2,2,2,3,3,2,2,3,1,2,3,1,1,1,3,1,3,3,1,2,3,1,1,3,2,3,1,1,2,2,1,1,2,2,3,3,2,1,3,3,2,3,1,2,2,3,2,1,3,3,1,3,3,1,2,2,1,2,3,2,1,3,2,2,1,3,2,3,1,1,2,2,2,2,1,3,3,3,2,3,2,1,1,2,1,2,1,3,3,3,1,3,3,1,1,3,3,2,2,3,2,2,2,3,3,2,2,3,2,1,1,3,3,1,3,3,2,1,1,2,2,3,3,1,2,2,2,1,2,1,3,1,2,2,3,3,2,3,2,3,1,1,2,2,1,1,3,3,2,1,3,1,2,1,3,3,2,2,2,1,2,1,1,1,2,1,3,3,2,3,2,3,3,3,1,3,2,2,2,2,3,1,1,3,1,2,2,2,1,2,3,3,1,3,1,1,3,2,2,2,1,3,1,2,1,3,2,3,3,3,2,2,3,2,3,3,2,2,3,3,3,1,1,3,2,1,1,2,3,2,1,1,2,1,2,3,1,2,2,3,1,1,2,2,1,1,1,1,1,1,3,3,1,1,2,1,1,1,1,1,3,2,1,1,2,2,3,1,3,1,2,3,1,1,2,3,3,2,2,3,1,2,1,2,2,2,3,2,3,2,1,2,1,1,2,1,3,1,2,2,2,3,3,1,3,2,3,2,2,1,2,2,3,2,1,3,2,3,3,3,1,2,1,2,3,1,3,3,2,1,2,2,3,2,3,3,1,2,2,3,1,2,1,2,3,2,2,1,2,3,3,2,2,2,2,3,3,3,2,1,1,1,1,3,2,1,2,1,1,3,1,3,2,3,1,2,1,3,3,3,3,1,1,3,2,2,2,3,3,1,3,3,3,1,2,2,2,3,3,2,1,2,2,2,1,3,3,2,2,1,1,1,1,1,2,2,1,1,2,3,2,1,2,1,2,1,2,3,1,1,1,3,3,1,1,1,1,2,2,1,3,2,3,1,2,1,2,2,3,3,1,3,1,1,1,1,3,3,3,3,3,2,3,2,1,2,2,1,2,2,3,3,1,1,1,2,3,2,3,3,1,2,2,1,1,1,2,3,1,2,1,2,1,3,3,1,3,2,3,1,3,3,3,2,3,2,1,1,2,3,1,3,3,1,3,1,2,1,1,3,3,2,3,3,1,3,2,2,2,1,1,3,2,2,1,2,2,3,3,1,2,1,3,2,2,2,3,2,2,1,2,1,2,1,3,1,3,1,3,3,2,1,2,2,3,3,2,1,1,2,1,2,2,3,2,3,1,3,2,3,2,3,1,3,1,3,2,1,1,1,2,3,1,3,1,2,2,1,3,1,2,1,1,2,1,3,1,3,1,1,1,2,2,3,1,2,2,1,1,3,2,1,2,2,2,3,2,1,2,1,3,1,1,3,2,2,1,3,1,3,2,3,3,1,3,2,1,1,3,1,2,1,3,2,3,1,3,3,2,2,2,3,3,1,2,3,1,3,1,3,3,1,1,3,1])
print(mc.query(1713,1861,79))
print(mc.query(7,1959,1119))
print(mc.query(67,263,118))
print(mc.query(452,491,23))
print(mc.query(72,1139,776))
print(mc.query(1415,1882,354))
print(mc.query(1175,1979,686))
print(mc.query(90,540,382))
print(mc.query(61,247,175))
print(mc.query(691,1586,544))
print(mc.query(1426,1685,235))
print(mc.query(666,872,148))
print(mc.query(1292,1850,291))
print(mc.query(74,654,431))
print(mc.query(439,1386,829))
print(mc.query(74,311,143))
print(mc.query(400,1567,751))
print(mc.query(886,1863,658))
print(mc.query(1580,1767,176))
print(mc.query(603,1777,1051))
print(mc.query(595,1135,424))
print(mc.query(105,280,93))
print(mc.query(1546,1556,8))
print(mc.query(668,1923,1155))
print(mc.query(97,946,565))
print(mc.query(571,749,104))
print(mc.query(871,1951,567))
print(mc.query(0,1923,1913))
print(mc.query(786,1398,528))
print(mc.query(1158,1493,312))
print(mc.query(248,397,101))
print(mc.query(320,821,483))
print(mc.query(604,1934,871))
print(mc.query(1675,1981,175))
print(mc.query(1320,1728,375))
print(mc.query(1122,1752,617))
print(mc.query(189,1343,1113))
print(mc.query(336,514,174))
print(mc.query(110,430,228))
print(mc.query(422,1865,1286))
print(mc.query(81,1673,939))
print(mc.query(808,1079,163))
print(mc.query(414,1047,567))
print(mc.query(664,1354,461))
print(mc.query(875,1824,677))
print(mc.query(197,1410,1035))
print(mc.query(310,364,29))
print(mc.query(1176,1255,60))
print(mc.query(796,1072,212))
print(mc.query(358,446,69))
print(mc.query(172,1775,1359))
print(mc.query(1,1035,708))
print(mc.query(1412,1780,263))
print(mc.query(677,737,46))
print(mc.query(1838,1914,65))
print(mc.query(162,904,598))
print(mc.query(830,1161,305))
print(mc.query(502,654,149))
print(mc.query(461,608,109))
print(mc.query(91,1824,1345))
print(mc.query(43,1677,1385))
print(mc.query(991,1247,255))
print(mc.query(117,1311,806))
print(mc.query(288,1725,732))
print(mc.query(218,1538,1017))
print(mc.query(45,564,484))
print(mc.query(1104,1387,185))
print(mc.query(93,1716,1272))
print(mc.query(280,679,384))
print(mc.query(675,1843,599))
print(mc.query(553,1280,390))
print(mc.query(597,737,82))
print(mc.query(1417,1612,129))
print(mc.query(1302,1767,378))
print(mc.query(37,1076,977))
print(mc.query(882,1497,485))
print(mc.query(787,926,94))
print(mc.query(884,1305,237))
print(mc.query(919,1298,330))
print(mc.query(403,464,34))
print(mc.query(251,665,359))
print(mc.query(857,1129,225))
print(mc.query(415,1316,793))
print(mc.query(381,840,254))
print(mc.query(937,1712,546))
print(mc.query(193,601,259))
print(mc.query(18,1343,1234))
print(mc.query(1224,1601,315))
print(mc.query(508,606,52))
print(mc.query(1503,1574,64))
print(mc.query(427,1129,409))
print(mc.query(1458,1659,196))
print(mc.query(479,1907,993))
print(mc.query(7,1252,1142))
print(mc.query(1308,1817,379))
print(mc.query(1053,1939,651))
print(mc.query(1530,1658,89))
print(mc.query(442,705,239))
print(mc.query(121,720,342))
print(mc.query(552,1397,703))

# Your MajorityChecker object will be instantiated and called as such:
# obj = MajorityChecker(arr)
# param_1 = obj.query(left,right,threshold)
